

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <title><%= pageTitle %></title>
    
    <link rel="icon" href="/img/pikitucho.svg" type="svg+xml">
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/stylesheets/globals/global.css">
    <script src="/js/globals/global.js" defer></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Archivo+Black&family=Cinzel+Decorative:wght@400;700;900&family=Open+Sans:wght@500;800&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Tangerine:wght@400;700&display=swap');

        *, *::before, *::after { margin:0; padding:0; box-sizing:border-box; }
        *[link] { cursor: pointer; }
        *[link]:hover { color: #905; text-shadow: #1b1d2250 0 0 15px; transform: translateX( 4px ); transition: .3s ease-in-out; }
        html {
            background: #1b1d22;
        }
        body {
            min-height: 100vh;
            padding-top: 81px;
            color: #e9e6e3;
            font-family: 'Poppins';
        }
        ul, ol, menu {
            margin: 1em 0;
            padding-left: 40px;
        }
        menu { list-style-type: none; }
        pre, dl {
            margin: 1em 0;
        }
        dd {
            margin-left: 40px;
        }
        blockquote {
            margin: 1em 40px;
        }
        fieldset {
            margin-left: 2px;
            margin-right: 2px;
            padding: 0.35em 0.625em 0.75em 0.75em;
        }
        legend {
            padding-left: 2px;
            padding-right: 2px;
        }

        appbar {
            display: grid;
            width: 100%;
            height: calc( var(--appbar-height) + 16px );
            position: fixed;
            top: 0; left: 0;
            background: var(--cp06);
            box-shadow: 0px 0px 8px #0008;
            z-index: 9;

            background: var( --cp07 );
            border-radius: 0 0 30px 30px;
            border: var( --cp00 ) dashed;
            box-shadow: var( --cp07 ) 0 0 0 6px;
            filter: drop-shadow( #0009 0 0 5px );
            transition: .3s ease;
        } appbar > menu {
            display: none;
            flex-direction: column;
            align-items: start;
            width: 90%;
            height: 90%;
            padding-top: 75px;
            border-radius: 24px;
            position: relative;
            background: #fff;
            box-shadow: #0003 0 0 13px 3px;
        } appbar > menu > :is( * ) {
            cursor: pointer;
            user-select: none;
            /* position: absolute; */
            font-size: 1.5em;
            font-weight: bold;
            width: 90%;
            padding: 2%;
            border-radius: 2rem;
            color: var( --cp08 );
            transition: .1s ease-out;
        } appbar > menu > :is( * ):hover {
            transition: .1s ease-in;
            
            background: #f5f5f5;
            color: #daa250;
        }
        appbar-overlay {
            display: block;
            width: 100%;
            height: 81px;
            position: absolute;
            top: 0; left: 0;
            z-index: 9;
            background-color: #1b1d22;
            box-shadow: #1b1d22 0 0 0 6px;
            filter: drop-shadow( #0009 0 0 5px );
            border-left: #ffab00 2px dashed;
            border-right: #ffab00 2px dashed;
            border-bottom: #ffab00 2px dashed;
            border-radius: 0 0 60px 60px;
        } appbar-home {
            display: grid;
            grid-template-columns: .2fr .6fr .2fr;
            width: clamp( 100px, 100%, 1200px );
            height: 81px;
            margin: 0 auto;
        }
        appbar-home > :where( appbar-logo, appbar-right ) {
            display: grid;
            place-items: center;
            max-width: 172.8px;
            height: 81px;
            aspect-ratio: 16 / 7.5;
            padding: 0 5%;
            /* background: #000; */
        }
        appbar-home > menu {
            display: flex;
            align-items: center; justify-content: center;
            gap: 4%;
            width: 100%;
            max-height: 81px;
            /* background: #000; */
        } appbar-home > menu > * {
            cursor: pointer; user-select: none;
            transition: .3s ease;
        } appbar-home > menu > *:hover {
            transition: .3s ease;
            color: #ffab00;
        } 
        appbar-home > appbar-logo {
            display: grid;
            grid-template-columns: .2fr .8fr;
            max-width: 172.8px;
            height: 81px;
            aspect-ratio: 16 / 7.5;
        }
        img[logo-icon] { max-width: 53.99px; }
        img[logo-text] { max-width: 120px; }

        article {
            display: block;
            width: clamp( 100px, 100%, 900px );
            min-height: 80vh !important;
            margin: 4% auto;
            padding: 4px;
            border-radius: 5px;
            background: #905;
            background: linear-gradient( 
                45deg,
                #905, #ffab00
            );
            clip-path: polygon( 0 33px, 33px 0, 100% 0, 100% calc( 100% - 33px ), calc( 100% - 33px ) 100%, 0 100% );
        } article > overlay {
            display: grid;
            grid-template-rows: .1fr 1px .9fr;
            justify-items: center;
            gap: 4%;
            width: clamp( 100px, 100%, 900px );
            min-height: 80vh !important;
            margin: 0 auto;
            padding: 4%;
            border-radius: 5px;
            background: #212329;
            clip-path: polygon( 0 33px, 33px 0, 100% 0, 100% calc( 100% - 33px ), calc( 100% - 33px ) 100%, 0 100% );
        }

        section { display: grid; place-items: center; }

        section[palette] {
            display: grid;
            grid-template-columns: repeat(4, 114px);
            grid-template-rows: repeat( 5, 80px );
            place-items: baseline;
            gap: 15px;
        }

        hr {
            width: 80%;
            border: #daa520 1px dashed;
        }

        home > article > section {
            display: grid;
            place-items: center;
            width: 100%;
        }

        h1 { color: transparent; }

    </style>
    <style>
        body {
            background-color: #1b1d22;
            background-image:   linear-gradient(0deg, #00000000 24px, #313239 25px),
                                linear-gradient(90deg, #00000000 24px, #313239 25px);
            background-size: 25px 25px;
            background-attachment: fixed;
        }
        w { color: #fff; }
        t { color: #c00; }
        tag-a { color: #c00; }
        tag-a::before { content: "<"; color: #fff; }
        tag-a::after { content: ">"; color: #fff; }
        tag-f { color: #c00; }
        tag-f::before { content: "</"; color: #fff; }
        tag-f::after { content: ">"; color: #fff; }
        tag-a-opn { color: #c00; }
        tag-a-opn::before { content: "<"; color: #fff; }
        property {
            color: #a36e04;
            padding-left: 2vw;
        }
        prop {
            color: #a36e04;
            padding-left: 1ch;
        }
        n, defer { color: #a36e04; }
        *[c2c] { position: relative; cursor: pointer; user-select: none; }
        *[c2c]:hover:after {
            content: "Clique para copiar a tag completa";
            position: absolute;
            bottom: -50%;
            left: 0; right: 0;
            padding: 2% 0;
            background: #0008;
        }

        [views-activated] {
            height: 80vh !important;
            padding: calc( 81px + 2em ) 0 2em;
        }
        views-activated {
            display: none;
            width: 95%;
            height: 100%;
            margin: 0 auto;
            padding: 1.5em 2.5em;
            background: #f5f5f550;
            color: #505257;
            border-radius: 0.5em;
            clip-path: polygon( 0 33px, 33px 0, 100% 0, 100% calc( 100% - 33px ), calc( 100% - 33px ) 100%, 0 100% );
        } [menu-views-activated] {
            display: block;
            animation: becomes-visible 1.8s;
        }

        @keyframes becomes-visible {
            0% {
                opacity: 0;
            }
            100% {
                opacity: 1;
            }
        }

        @media only screen and ( min-width:893px ) {

            appbar {
                height: calc( var(--appbar-height) + 16px ) !important;
            }

            btn-appbar-menu-toggle {
                display: none;
            }
        }
        @media only screen and ( max-width:892px ) {

            appbar {

            }
            appbar-overlay {

            }
            appbar-home {
                grid-template-columns: .9fr .05fr;
            }
            appbar-home :is( menu, appbar-right ) { display: none; }
            appbar-home :is( appbar-logo ) {
                width: 100%;
                margin: 0 auto;
            }
            
            btn-appbar-menu-toggle {
                display: flex;
                place-items: center;
                justify-content: center;
                padding-top: 1%;
                width: 40px;
                height: 40px;
                position: absolute;
                right: 5vw;
                background: var( --cp05 );
                border-radius: 5rem;
                border: var( --cp00 ) dashed;
                box-shadow: var( --cp05 ) 0 0 0 3px;
                filter: drop-shadow( #0005 -3px 3px 5px );
                font-size: 1.5em;
                font-weight: bold;
                color: var( --cp00 );
                cursor: pointer;
                user-select: none;
                transition: .3s ease;
            } btn-appbar-menu-toggle:hover {
                transition: .3s ease;
                transform: skew( 2deg -2deg );
                background: linear-gradient(
                    to center,
                    transparent,
                    #eeb06a
                );
                box-shadow: #ca9250 0 0 0 3px;
                border: #1b1d22 2px dashed;
                color: #505257;
            }

            *[active] {
                display: flex;
                animation: active .8s;
            }
            @keyframes active {
                0% {
                    opacity: 0;
                    top: -50%;
                }
                70% {
                    opacity: .1;
                    top: 0%;
                }
                100% {
                    opacity: 1;
                    top: 0%;
                }
            }

            article {
                width: 90%;
            }
        }

        @media only screen and ( min-width: 798px ) {
            
            article section:has( holder ) {
                display: grid;
                grid-template-columns: 1.5fr 1fr;
            }
            article section holder {
                display: flex;
                align-items: center;
                justify-content: center;
            }
        }
    </style>
</head>

<body>
    <appbar>
        <appbar-overlay>
            <appbar-home>
                <appbar-logo>
                    <img logo-icon src="/img/pikitucho.svg" alt="logo image">
                    <img logo-text src="/img/home/pikituchos-logo-txt.png" alt="">
                </appbar-logo>
                <menu appbar>
                    <li url="#globals" data="g"><txt>Estilo global</txt></li>
                    <li url="#widgets" data="w"><txt>Widgets</txt></li>
                    <li url="#color-palette" data="c"><txt>Paleta de cores</txt></li>
                </menu>
                <appbar-right>
                    <button-pk test-views
                        name="Menu" 
                        btn-color="#2af" 
                        btn-shadow="linear-gradient(
                            to right,
                            #27a, #28f, #27a 
                        )" 
                        text-color="white"
                    ></button-pk>
                </appbar-right>
                <btn-appbar-menu-toggle>
                    <span>&#9776;</span>
                </btn-appbar-menu-toggle>
            </appbar-home>
        </appbar-overlay>
        <menu appbar>
            <li url="#globals" data="g">Estilo global</li>
            <li url="#widgets" data="w">Widgets</li>
            <li url="#color-palette" data="c">Paleta de cores</li>
        </menu>
        <views-activated>
            <header>
            </header>
            <home>
                <h2 link="/">index</h2>
                <h2 link="/">Pikituchos</h2>
                <h2 link="/admin">Admin Panel</h2>
                <h2 link="/admin/add-product">Add Product</h2>
                <h2 link="/produto">Product Page Model</h2>
            </home>
        </views-activated>
    </appbar>

    <home>
        <h1 id="globals">Estilo global</h1>
        <article g>
            <overlay>
                <header>
                    <title-pk 
                        title-pk="Importar o estilo global" 
                        color="var( --cp07 )"
                        margin="0"
                    ></title-pk>
                </header>
                <hr>
                <section>
                    <p>
                        colar as tags de css e js antes da tag de fechamento da head &lt;/head&gt;
                    </p>
                    <div c2c="css">
                        <h2>css:</h2>
                        <tag-a-opn>link</tag-a-opn> 
                            <prop>rel</prop>="stylesheet" 
                            <prop>href</prop>="stylesheets/globals/global.css"
                        <w>&gt;</w>
                    </div>
                    <div c2c="js">
                        <h2>js:</h2>
                        <tag-a-opn>script</tag-a-opn> 
                            <prop>src</prop>="scripts/globals/global.js" <defer>defer</defer>
                        <w>&gt;</w><tag-f>script</tag-f>
                    </div>
                </section>
            </overlay>
        </article>

        <article id="header-footer" g>
            <overlay>
                <header>
                    <title-pk 
                        title-pk="header e footer" 
                        color="var( --cp06 )"
                        margin="0"
                    ></title-pk>
                </header>
                <hr>
                <section>
                    <h3>novas páginas:  <br>
                        <w>o conteúdo das novas páginas precisa ser envelopado na tag   <br>
                        <tag-a>main</tag-a><tag-f>main</tag-f>
                    </h3>
                    <h3 c2c="header">
                        adicionar o header na pagina com a tag: <br>
                        <tag-a>page-header</tag-a><tag-f>page-header</tag-f>
                    </h3>
                    <h3 c2c="footer">
                        adicionar o footer na pagina com a tag: <br>
                        <tag-a>page-footer</tag-a><tag-f>page-footer</tag-f>
                    </h3>
                </section>
            </overlay>
        </article>
        
        <h1 id="widgets">Widgets</h1>
        <article id="title-pk" w>
            <overlay>
                <header>
                    <title-pk 
                        title-pk="Título" 
                        color="var( --cp08 )"
                        margin="0"
                    ></title-pk>
                </header>
                <hr>
                <section>
                    <holder>
                        <p c2c="title"
                            title-pk="Seu pequeno é nossa prioridade" 
                        >Seu pequeno é nossa prioridade</p>
                    </holder>
                    <div c2c="title">
                        <tag-a-opn>title-pk</tag-a-opn> <br>
                            <property>title-pk</property>="Seu pequeno é nossa prioridade"  <br>
                            <property>color</property>="var(--cp05)"    <br>
                        <w>&gt;</w><tag-f>title-pk</tag-f>
                    </div>
                </section>
                <section>
                            
                    <title-pk div title-pk="Pikituchos 1.17em" color="var( --cp09 )" style="font-size: 1.17em"></title-pk>
                    <title-pk div title-pk="Pikituchos 1.5em" color="var( --cp07 )" style="font-size: 1.5em"></title-pk>
                    <title-pk div title-pk="Pikituchos 2em" color="#279" style="font-size: 2em"></title-pk>
                    <title-pk div title-pk="Pikituchos 2.5em" color="var( --cp05 )" style="font-size: 2.5em"></title-pk>
                </section>
            </overlay>
        </article>

        <article id="button-pk" w>
            <overlay>
                <header>
                    <p title-pk="Botão">Botão</p>
                </header>
                <hr>
                <section>
                    <holder>
                        <button-pk 
                            name="Botão" 
                            text-color="#fff"
                            btn-color="var( --cp06 )"
                            btn-shadow="#25f"
                        ></button-pk>
                    </holder>
                    <div c2c="button">
                        <tag-a-opn>button-pk</tag-a-opn> <br>
                            <property>name</property>="Botão"  <br>
                            <property>text-color</property>="#fff"    <br>
                            <property>btn-color</property>="var( --cp06 )"    <br>
                            <property>btn-shadow</property>="#25f"    <br>
                        <w>&gt;</w><tag-f>button-pk</tag-f>
                    </div>
                </section>
            </overlay>
        </article>

        <article id="card-pk" w>
            <overlay>
                <header>
                    <p title-pk="Card de produto">Card de produto</p>
                </header>
                <hr>
                <section>
                    <holder>
                        <card-pk c2c="card"
                            name="Nome do produto" 
                            desc="descrição do produto" 
                            real="45" 
                            cents="90"
                            src="/img/pikitucho.svg" 
                            alt=""
                            btn="Ver detalhes"
                        ></card-pk>
                    </holder>
                    <div c2c="card">
                        <tag-a-opn>card-pk</tag-a-opn>  <br>
                            <property>name</property>="Nome do produto"  <br>
                            <property>desc</property>="descrição do produto" <br>
                            <property>real</property>="45"  <br>
                            <property>cents</property>="90  <br>
                            <property>src</property>="img/product-05.png" <br>
                            <property>alt</property>="" <br>
                            <property>btn</property>="Ver detalhes" <br>
                        <w>&gt;</w> <tag-f>card-pk</tag-f>
                    </div>
                </section>
            </overlay>
        </article>

        <h1 id="color-palette">Paleta de cores</h1>
        <article c>
            <overlay>
                <header>
                    <p title-pk="Paleta de cores">Paleta de cores</p>
                </header>
                <hr>
                <section palette>
                    <color-palette color="var( --cp01 )"></color-palette>
                    <color-palette color="var( --cp02 )"></color-palette>
                    <color-palette color="var( --cp03 )"></color-palette>
                    <color-palette color="var( --cp04 )"></color-palette>
                    <color-palette color="var( --cp05 )"></color-palette>
                    <color-palette color="var( --cp06 )"></color-palette>
                    <color-palette color="var( --cp07 )"></color-palette>
                    <color-palette color="var( --cp08 )"></color-palette>
                    <color-palette color="var( --cp09 )"></color-palette>
                </section>
            </overlay>
        </article>
    </home>
    
    <script>


        'use strict';
        window.addEventListener( 'load', ev => {
            /* [ properties ]
            =================================== */
            let links = $$( '*[link]' ),
                appbarLinks = $$( "menu[appbar] > *" ),
                appbarBottom = $( "appbar" ),
                appbarMobMenu = $( "appbar > menu" ),
                clik2copy = $$( "*[c2c]" ),
                toggle = $( "btn-appbar-menu-toggle" ),
                viewsMenu = $( "views-activated" ),
                testViewsToggle = $( "[test-views]" ),
                paleta = $( "[title-pk='Paleta de cores']" );

            let c2cValues = {
                css: "<link rel='stylesheet' href='../public/stylesheets/globals/global.css'>", 
                js: '<script src="/js/globals/global.js" defer><' + '/script>',
                header: "<page-header></page-header>", 
                footer: "<page-footer></page-footer>", 
                title: `<title-pk 
    title-pk="Nome do título" 
    color="#daa250"
></title-pk>`, 
                card: `<card-pk 
    src="/img/pikitucho.svg" 
    alt="Descrição da imagem" 
    name="Titulo do card" 
    desc="descrição do card" 
    real="45" 
    cents="90" 
    btn="texto do botão"
></card-pk>`,
                button: `<button-pk 
    name="Texto do botão" 
    btn-color="var( --cp06 )" 
    btn-shadow="#25f" 
    text-color="#fff"
></button-pk>`
            };


            /* [ events ]
            =================================== */
            links.forEach( link => link.addEventListener( 'click', ev => {
                window.open( link.getAttribute( 'link' ), '_blank' );
            } ) );

            appbarLinks.forEach( appbarLink => appbarLink.addEventListener( "click", ev => {
                window.open( appbarLink.getAttribute( "url" ), "_self" );
                switch( appbarLink.getAttribute( "data" ) ) {
                    case "g": {
                        $$( "*[g]" ).forEach( v => v.style.display = "grid" );
                        $$( "*[w]" ).forEach( v => v.style.display = "none" );
                        $$( "*[c]" ).forEach( v => v.style.display = "none" );
                    }
                    break;
                    case "w": {
                        $$( "*[g]" ).forEach( v => v.style.display = "none" );
                        $$( "*[w]" ).forEach( v => v.style.display = "grid" );
                        $$( "*[c]" ).forEach( v => v.style.display = "none" );
                    }
                    break;
                    case "c": {
                        $$( "*[g]" ).forEach( v => v.style.display = "none" );
                        $$( "*[w]" ).forEach( v => v.style.display = "none" );
                        $$( "*[c]" ).forEach( v => v.style.display = "grid" );
                    }
                    break;
                }
            } ) );

            toggle.addEventListener( "click", ev => {
                if( appbarBottom.style.height == "calc( var(--appbar-height) + 16px )" || appbarBottom.style.height == "" ) {
                    appbarBottom.style.height = "95%";
                    appbarMobMenu.setAttribute( "active", "" );
                    
                } else {
                    appbarBottom.style.height = "calc( var(--appbar-height) + 16px )";
                    appbarMobMenu.removeAttribute( "active" );
                }
            } );

            clik2copy.forEach( c2c => c2c.addEventListener( "click", ev => {
                switch( c2c.getAttribute( "c2c" ) ) {
                    case "css": {
                        navigator.clipboard.writeText( c2cValues.css );
                    }
                    break;
                    case "js": {
                        navigator.clipboard.writeText( c2cValues.js );
                    }
                    break;
                    case "title": {
                        navigator.clipboard.writeText( c2cValues.title );
                    }
                    break;
                    case "card": {
                        navigator.clipboard.writeText( c2cValues.card );
                    }
                    break;
                    case "button": {
                        navigator.clipboard.writeText( c2cValues.button );
                    }
                    break;
                    case "header": {
                        navigator.clipboard.writeText( c2cValues.header );
                    }
                    break;
                    case "footer": {
                        navigator.clipboard.writeText( c2cValues.footer );
                    }
                    break;
                }
            } ) );



            
            class ColorPalette extends HTMLElement {
                constructor() {
                    super();
                    let colorPalette = document.createElement( "template" );
                    colorPalette.innerHTML = titleTemplate = `
                        <style>
                            card-base {
                                display: grid;
                                grid-template-columns: 100%;
                                grid-template-rows: .8fr .2fr;
                                align-items: center;
                                width: 100%;
                                height: 100%;
                            }
                            box {
                                display: block;
                                width: 100%;
                                aspect-ratio: 16 / 9;
                            }
                            h4 {
                                width: 100%;
                                color: #e9e6e3;
                                height: 100%;
                                text-align: center;
                            }
                        </style>
                        <card-base>
                            <box></box>
                            <h4></h4>
                        </card-base>`;
                    this.style.width = "100%";
                    this.attachShadow( { mode: "open" } );
                    this.shadowRoot.append( colorPalette.content.cloneNode( true ) );
                    this.shadowRoot.querySelector( "box" ).style.background = this.getAttribute( "color" );
                    this.shadowRoot.querySelector( "h4" ).innerText = this.getAttribute( "color" );
                    // this.style.background = this.getAttribute( "name" );
                } 
                connectedCallback() {
                    this.render();
                }
                render() {
                }
            }
            window.customElements.define( "color-palette", ColorPalette );


            const toggleAttr = ( l, y ) => {
                l.getAttribute( y ) == "" ?
                    l.removeAttribute( y ) : l.setAttribute( y, "" );
            }

            testViewsToggle.addEventListener( "click", ev => {
                toggleAttr( appbarBottom, "views-activated" );
                toggleAttr( viewsMenu, "menu-views-activated" );
            } );

            // paleta.charAt( 0 ).style.color = "blue"; 

        } );


    </script>
    <script>
        addEventListener( "load", ev => {
            var sounds = [
                iteractionRadiateSound  = new Audio( './audio/Holographic Interaction Radiate.wav' ),
                iteractionSound = new Audio( './audio/Holographic Interaction.wav' ),
                activate = new Audio( "./audio/Activate.wav" ),
                lockOn = new Audio( "./audio/Lock On.wav" ),
                ambience = new Audio( "./audio/AMBIENCE_HEARTBEAT.wav" ),
            ];

            $$( "menu[appbar] > li > txt" ).forEach( txt => txt.addEventListener( "mouseover", ev => {
                    iteractionRadiateSound.load();
                    iteractionRadiateSound.play();
            } ) );
        
            $$( "menu[appbar] > li > txt" ).forEach( txt => txt.addEventListener( "click", ev => {
                    lockOn.load();
                    lockOn.play();
            } ) );
            
        } );
    </script>
</body>
</html>